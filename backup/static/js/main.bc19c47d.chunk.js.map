{"version":3,"sources":["assets/images/icons/warning.svg","services/api.js","components/PageHeader/index.js","components/Input/index.js","pages/RetrabForm/index.js","routes.js","App.js","index.js"],"names":["module","exports","api","axios","create","baseURL","PageHeader","props","className","title","children","Input","name","label","rest","htmlFor","type","id","RetrabForm","useState","cod_barras","setCod_barras","cod_barrasErr","setCod_barrasErr","processo","setProcesso","processoId","setProcessoId","processoErr","setProcessoErr","etapa","setEtapa","etapaId","setEtapaId","etapaErr","setEtapaErr","reparo","setReparo","reparoId","setReparoId","reparoErr","setReparoErr","causa","setCausa","causaId","setCausaId","causaErr","setCausaErr","motivo","setMotivo","motivoErr","setMotivoErr","a","get","apiValidaCodBarras","codbarrasIsOk","data","map","console","log","apiValidaProcesso","processoIsOk","apiValidaEtapa","etapaIsOk","apiValidaReparo","reparoIsOk","apiValidaCausa","causaIsOk","apiValidaMotivo","motivoIsOk","e","preventDefault","alert","post","grava","onSubmit","autocomplete","required","value","onChange","target","onBlur","src","warningIcon","alt","Routes","path","component","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc19c47d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/warning.6dfaa2f9.svg\";","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://172.16.1.145:3333/api'\r\n});\r\n\r\nexport default api;","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst PageHeader = (props) => {\r\n    return (\r\n        <header className=\"page-header\">\r\n            <div className=\"header-content\">\r\n                <strong>{props.title}</strong>\r\n                {props.children}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default PageHeader\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst Input = ({ name, label, ...rest }) => {\r\n    return (\r\n        <div className=\"input-block\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type=\"text\" id={name} {...rest} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport PageHeader from '../../components/PageHeader';\r\nimport Input from '../../components/Input';\r\nimport warningIcon from '../../assets/images/icons/warning.svg';\r\n\r\nimport './styles.css';\r\n\r\nfunction RetrabForm() {\r\n    const [cod_barras, setCod_barras] = useState('');\r\n    const [cod_barrasErr, setCod_barrasErr] = useState('');\r\n\r\n    const [processo, setProcesso] = useState('');\r\n    const [processoId, setProcessoId] = useState('');\r\n    const [processoErr, setProcessoErr] = useState('');\r\n\r\n    const [etapa, setEtapa] = useState('');\r\n    const [etapaId, setEtapaId] = useState('');\r\n    const [etapaErr, setEtapaErr] = useState('');\r\n\r\n    const [reparo, setReparo] = useState('');\r\n    const [reparoId, setReparoId] = useState('');\r\n    const [reparoErr, setReparoErr] = useState('');\r\n\r\n    const [causa, setCausa] = useState('');\r\n    const [causaId, setCausaId] = useState('');\r\n    const [causaErr, setCausaErr] = useState('');\r\n\r\n    const [motivo, setMotivo] = useState('');\r\n    const [motivoErr, setMotivoErr] = useState('');\r\n\r\n    async function handleValidaCodBarra() {\r\n        if (cod_barras) {\r\n            const apiValidaCodBarras = await api.get(`/consulta_codbarras/${cod_barras}`);\r\n            const codbarrasIsOk = apiValidaCodBarras.data.map(rest => rest['ID']);\r\n\r\n            if (codbarrasIsOk[0] > 0) {\r\n                console.log(codbarrasIsOk[0])\r\n                setCod_barrasErr('')\r\n            } else {\r\n                setCod_barrasErr('Código de barras não encontrado.')\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleValidaProcesso() {\r\n        if (processo) {\r\n            const apiValidaProcesso = await api.get(`/consulta_processo/${processo}`);\r\n            const processoIsOk = apiValidaProcesso.data.map(rest => rest['ID']);\r\n            if (processoIsOk[0] > 0) {\r\n                console.log(processoIsOk[0])\r\n                setProcessoId(processoIsOk[0])\r\n                setProcessoErr('')\r\n            } else {\r\n                setProcessoErr('Processo não encontrado.')\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleValidaEtapa() {\r\n        if (etapa) {\r\n            const apiValidaEtapa = await api.get(`/consulta_etapa/${etapa}`);\r\n            const etapaIsOk = apiValidaEtapa.data.map(rest => rest['ID']);\r\n            if (etapaIsOk[0] > 0) {\r\n                console.log(etapaIsOk[0])\r\n                setEtapaId(etapaIsOk[0])\r\n                setEtapaErr('')\r\n            } else {\r\n                setEtapaErr('Etapa não encontrada.')\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleValidaReparo() {\r\n        if (reparo) {\r\n            const apiValidaReparo = await api.get(`/consulta_reparo/${reparo}`);\r\n            const reparoIsOk = apiValidaReparo.data.map(rest => rest['ID']);\r\n            if (reparoIsOk[0] > 0) {\r\n                console.log(reparoIsOk[0])\r\n                setReparoId(reparoIsOk[0])\r\n                setReparoErr('')\r\n            } else {\r\n                setReparoErr('Reparo não encontrado.')\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleValidaCausa() {\r\n        if (causa) {\r\n            const apiValidaCausa = await api.get(`/consulta_causa/${causa}`);\r\n            const causaIsOk = apiValidaCausa.data.map(rest => rest['ID']);\r\n            if (causaIsOk[0] > 0) {\r\n                console.log(causaIsOk[0])\r\n                setCausaId(causaIsOk[0])\r\n                setCausaErr('')\r\n            } else {\r\n                setCausaErr('Causa não encontrada.')\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleValidaMotivo() {\r\n        if (motivo) {\r\n            const apiValidaMotivo = await api.get(`/consulta_motivo/${motivo}`);\r\n            const motivoIsOk = apiValidaMotivo.data.map(rest => rest['ID']);\r\n            if (motivoIsOk[0] > 0) {\r\n                console.log(motivoIsOk[0])\r\n                setMotivoErr('')\r\n            } else {\r\n                setMotivoErr('Motivo não encontrado.')\r\n            }\r\n        }\r\n    }\r\n\r\n    async function handleCreate(e) {\r\n        e.preventDefault();\r\n        if (cod_barrasErr || processoErr || etapaErr || reparoErr || causaErr || motivoErr) {\r\n            alert('Oops, verifique os erros apontados na tela!');\r\n        } else {\r\n            const grava = await api.post('/gravar_retrabalho', {\r\n                cod_barras,\r\n                processo: processoId,\r\n                etapa: etapaId,\r\n                reparo: reparoId,\r\n                causa: causaId,\r\n                motivo\r\n            });\r\n            console.log(grava)\r\n            //localStorage.setItem('user', _id);\r\n            setCod_barras('');\r\n            setProcesso('');\r\n            setEtapa('');\r\n            setReparo('');\r\n            setCausa('');\r\n            setMotivo('');\r\n            alert('Sucesso, Retrabalho registrado!');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-apontretrab-form\" className=\"container\">\r\n            <PageHeader title=\"Apontamento de Retrabalhos\" />\r\n            <main>\r\n\r\n                <form onSubmit={handleCreate} autocomplete=\"off\">\r\n                    <fieldset>\r\n                        <Input\r\n                            type=\"number\"\r\n                            required\r\n                            name=\"cod_barras\"\r\n                            label=\"Código de Barras\"\r\n                            value={cod_barras}\r\n                            onChange={(e) => { setCod_barras(e.target.value) }}\r\n                            onBlur={handleValidaCodBarra} />\r\n                        {cod_barrasErr && <p>{cod_barrasErr}</p>}\r\n                        <Input\r\n                            type=\"number\"\r\n                            required\r\n                            name=\"processo\"\r\n                            label=\"Processo\"\r\n                            value={processo}\r\n                            onChange={(e) => { setProcesso(e.target.value) }}\r\n                            onBlur={handleValidaProcesso} />\r\n                        {processoErr && <p>{processoErr}</p>}\r\n                        <Input\r\n                            type=\"number\"\r\n                            required\r\n                            name=\"etapa\"\r\n                            label=\"Etapa\"\r\n                            value={etapa}\r\n                            onChange={(e) => { setEtapa(e.target.value) }}\r\n                            onBlur={handleValidaEtapa} />\r\n                        {etapaErr && <p>{etapaErr}</p>}\r\n                        <Input\r\n                            type=\"number\"\r\n                            required\r\n                            name=\"reparo\"\r\n                            label=\"Reparo\"\r\n                            value={reparo}\r\n                            onChange={(e) => { setReparo(e.target.value) }}\r\n                            onBlur={handleValidaReparo} />\r\n                        {reparoErr && <p>{reparoErr}</p>}\r\n                        <Input\r\n                            type=\"number\"\r\n                            required\r\n                            name=\"causa\"\r\n                            label=\"Causa\"\r\n                            value={causa}\r\n                            onChange={(e) => { setCausa(e.target.value) }}\r\n                            onBlur={handleValidaCausa} />\r\n                        {causaErr && <p>{causaErr}</p>}\r\n                        <Input\r\n                            type=\"number\"\r\n                            required\r\n                            name=\"motivo\"\r\n                            label=\"Motivo\"\r\n                            value={motivo}\r\n                            onChange={(e) => { setMotivo(e.target.value) }}\r\n                            onBlur={handleValidaMotivo} />\r\n                        {motivoErr && <p>{motivoErr}</p>}\r\n\r\n                    </fieldset>\r\n                    <footer>\r\n                        <p>\r\n                            <img src={warningIcon} alt=\"Aviso importante\" />\r\n                            Preencha todos os campos do formulário!\r\n                    </p>\r\n                        <button type=\"submit\">Registrar o retrabalho agora</button>\r\n                    </footer>\r\n                </form>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RetrabForm;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport RetrabForm from './pages/RetrabForm';\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route\r\n                    path=\"/\"\r\n                    component={RetrabForm}\r\n                    exact\r\n                />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\nimport './assets/styles/global.css';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}